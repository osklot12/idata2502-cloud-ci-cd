name: Deploy Application

on:
  workflow_run:
    workflows:
      - Build and Push Containers
      - Deploy Infrastructure
    types:
      - completed

jobs:
  deploy-app:
    runs-on: ubuntu-latest

    steps:
      # checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # set up ssh key for gce access
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.GCE_SSH_PRIVATE_KEY }}" > ~/.ssh/google_compute_engine
          echo "${{ secrets.GCE_SSH_PUBLIC_KEY }}" > ~/.ssh/google_compute_engine.pub
          chmod 600 ~/.ssh/google_compute_engine
          chmod 600 ~/.ssh/google_compute_engine.pub

      # authenticate with Google Cloud using google-github-actions/auth
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      # Set up Cloud SDK
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          version: 'latest'
          project_id: 'idata2502-ci-cd'

      # Deploy Svelte frontend using SSH
      - name: Deploy Svelte Frontend Container to GCE
        run: |
          set -e
          gcloud compute ssh debian@svelte-frontend --zone="europe-north1-a" --ssh-key-file=~/.ssh/google_compute_engine --command="
          docker pull osklot12/svelte-frontend:latest &&
          docker stop svelte-frontend || true &&
          docker rm svelte-frontend || true &&
          docker run -d -p 80:3000 --name svelte-frontend osklot12/svelte-frontend:latest
          "

      # verify svelte frontend pp deployment
      - name: Verify Svelte Frontend Deployment
        run: |
          gcloud compute ssh debian@svelte-frontend --zone="europe-north1-a" --ssh-key-file=~/.ssh/google_compute_engine --command="
          docker logs svelte-frontend
          "

      # download the frontend ip from gcs
      - name: Download Frontend IP from GCS
        run: |
          gsutil cp gs://your-gcs-bucket-name/frontend_ip.txt infrastructure/iac/frontend_ip.txt
          echo "FRONTEND_IP=$(cat infrastructure/iac/frontend_ip.txt)" >> $GITHUB_ENV

      # Deploy Spring Boot backend using SSH
      - name: Deploy Spring Boot Backend Container to GCE
        run: |
          set -e
          gcloud compute ssh debian@spring-backend --zone="europe-north1-a" --ssh-key-file=~/.ssh/google_compute_engine --command="
          docker pull osklot12/spring-backend:latest &&
          docker stop spring-backend || true &&
          docker rm spring-backend || true &&
          docker run -d -p 8080:8080 --name spring-backend \
            -e FRONTEND_IP=$FRONTEND_IP \
            osklot12/spring-backend:latest
          "

      # verify spring backend app deployment
      - name: Verify Spring Boot Backend Deployment
        run: |
          gcloud compute ssh debian@spring-backend --zone="europe-north1-a" --ssh-key-file=~/.ssh/google_compute_engine --command="
          docker logs spring-backend
          "