name: Revert Main on Failure

on:
  push:
    branches:
      - gitactions

jobs:
  revert-main:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: main  # Ensures we're working on the main branch

      # Step 2: Fetch history to identify the last successful commit
      - name: Fetch commit history
        run: git fetch --depth=50

      # Step 3: Identify the last successful commit
      - name: Find last successful commit
        id: find_commit
        run: |
          LAST_GOOD_COMMIT=$(git log --grep "Successful deployment" --pretty=format:'%H' -n 1)
          echo "last_successful_commit=$LAST_GOOD_COMMIT" >> $GITHUB_ENV
          echo "::set-output name=last_commit::$LAST_GOOD_COMMIT"

      # Step 4: Check if the push is a failure marker
      - name: Check for failure marker
        run: |
          if [[ ${{ github.event.head_commit.message }} != *"mark as failure"* ]]; then
            echo "Not a failure-triggered push. Skipping revert."
            exit 0
          fi

      # Step 5: Revert the main branch to the last successful commit
      - name: Reset and force push main
        run: |
          if [ -z "${{ env.last_successful_commit }}" ]; then
            echo "No successful commit found. Exiting."
            exit 1
          fi
          git reset --hard ${{ env.last_successful_commit }}
          git push origin main --force
